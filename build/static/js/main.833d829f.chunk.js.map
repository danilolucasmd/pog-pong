{"version":3,"sources":["hooks/index.tsx","services/score.ts","services/gameState.ts","services/playerBar.ts","components/PlayField/PlayerBar/index.tsx","utils.ts","services/ball.ts","services/enemyBar.ts","components/PlayField/EnemyBar/index.tsx","components/PlayField/Ball/index.tsx","components/PlayField/Score/index.tsx","components/PlayField/GameInfo/index.tsx","components/PlayField/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useObservable","callbackfn","deps","subscription","useState","value","setValue","error","setError","isComplete","setIsCompleted","useEffect","unsubscribe","subscribe","scoreService","score$","BehaviorSubject","player","enemy","this","asObservable","next","gameStates","gameStateService","gameState$","getScore","score","win","lose","resetScore","playerBarService","playerBarY$","fromEvent","document","pipe","switchMap","event","getGameState","filter","gameState","map","halfPlayfieldY","body","offsetHeight","diffPosY","offsetY","halfPlayfieldYNormalized","PlayerBar","getPlayerBarY","playerBarY","className","style","transform","variables","width","height","getRandomInt","max","Math","floor","random","ballService","ballIncreaseRatio","ballPosition","x","y","ballDirection","ballPosition$","resetBall","setInterval","getStaticGameState","halfPlayfield","offsetWidth","getStaticPlayerBarY","enemyBarY","enemyBarService","getStaticEnemyBarY","abs","increasePlayerScore","increaseEnemyScore","isInsideBarVerticalRange","increaseBallSpeed","barY","enemyDifficulty","enemyBarY$","getBallPosition","ballY","value1","value2","amount","EnemyBar","getEnemyBarY","Ball","Score","GameInfo","Playfield","App","addEventListener","play","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.833d829f.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { Subscription, Observable } from 'rxjs';\n\nexport function useObservable<T>(callbackfn: () => Observable<any[] | T>, deps?: readonly any[]): [T, any, boolean, (value: any) => void] {\n  const [value, setValue] = useState<any>(null);\n  const [error, setError] = useState(null);\n  const [isComplete, setIsCompleted] = useState(false);\n  let subscription: Subscription;\n\n  useEffect(() => {\n    !!subscription && subscription.unsubscribe();\n\n    setIsCompleted(false);\n    setError(null);\n\n    subscription = callbackfn().subscribe(\n      value => {\n        setValue(value);\n        setError(null);\n      },\n      error => {\n        setError(error);\n        setValue(null);\n      },\n      () => setIsCompleted(true)\n    );\n\n    return () => subscription.unsubscribe();\n  }, deps);\n\n  return [value, error, isComplete, setValue];\n}","import { BehaviorSubject, fromEvent } from \"rxjs\";\nimport { Vector2 } from \"../interfaces/core\";\n\ninterface IScore {\n  player: number;\n  enemy: number;\n}\n\nclass ScoreService {\n  private score$ = new BehaviorSubject<IScore>({ player: 0, enemy: 0 });\n\n  public getScore() {\n    return this.score$.asObservable();\n  }\n  \n  public increasePlayerScore() {\n    this.score$.next({\n      ...this.score$.value,\n      player: this.score$.value.player + 1\n    });\n  }\n  \n  public increaseEnemyScore() {\n    this.score$.next({\n      ...this.score$.value,\n      enemy: this.score$.value.enemy + 1\n    });\n  }\n\n  public resetScore() {\n    this.score$.next({ player: 0, enemy: 0 });\n  }\n}\n\nconst scoreService = new ScoreService();\n\nexport default scoreService;","import { BehaviorSubject } from \"rxjs\";\nimport ballService from \"./ball\";\nimport scoreService from \"./score\";\n\nexport const gameStates = {\n  none: 0,\n  playing: 1,\n  win: 2,\n  lose: 3\n};\n\nconst winPoints = 3;\n\nclass GameStateService {\n  private gameState$ = new BehaviorSubject<number>(gameStates.none);\n\n  constructor() {\n    scoreService.getScore().subscribe(\n      score => {\n        if(score.player >= winPoints) {\n          this.win();\n        }\n\n        if(score.enemy >= winPoints) {\n          this.lose();\n        }\n      }\n    );\n  }\n\n  public getGameState() {\n    return this.gameState$.asObservable();\n  }\n\n  public getStaticGameState() {\n    return this.gameState$.value;\n  }\n\n  public play() {\n    if(this.gameState$.value !== gameStates.playing) {\n      scoreService.resetScore();\n      this.gameState$.next(gameStates.playing);\n    }\n  }\n\n  public win() {\n    this.gameState$.next(gameStates.win);\n  }\n\n  public lose() {\n    this.gameState$.next(gameStates.lose);\n  }\n}\n\nconst gameStateService = new GameStateService();\n\nexport default gameStateService;","import { BehaviorSubject, filter, fromEvent, map, switchMap } from \"rxjs\";\nimport gameStateService, { gameStates } from \"./gameState\";\n\nclass PlayerBarService {\n  private playerBarY$ = new BehaviorSubject<number>(0);\n\n  constructor() {\n    fromEvent<MouseEvent>(document, 'mousemove').pipe(\n      switchMap(event => gameStateService.getGameState().pipe(\n        filter(gameState => gameState === gameStates.playing),\n        map(() => event)\n      ))\n    ).subscribe(\n      event => {\n        const halfPlayfieldY = document.body.offsetHeight / 2;\n        const diffPosY = event.offsetY - halfPlayfieldY;\n        const halfPlayfieldYNormalized = halfPlayfieldY - 130;\n        \n        if(diffPosY < halfPlayfieldYNormalized) {\n          if(diffPosY > -halfPlayfieldYNormalized) {\n            this.playerBarY$.next(diffPosY);\n          } else {\n            this.playerBarY$.next(-halfPlayfieldYNormalized);\n          }\n        } else {\n          this.playerBarY$.next(halfPlayfieldYNormalized);\n        }\n      }\n    );\n  }\n\n  public getPlayerBarY() {\n    return this.playerBarY$.asObservable();\n  }\n\n  public getStaticPlayerBarY() {\n    return this.playerBarY$.value;\n  }\n}\n\nconst playerBarService = new PlayerBarService();\n\nexport default playerBarService;","import './styles.css';\n\nimport { map } from 'rxjs';\nimport { useObservable } from '../../../hooks';\nimport playerBarService from '../../../services/playerBar';\n\nconst PlayerBar = () => {\n  const [playerBarY] = useObservable(() => playerBarService.getPlayerBarY(), []);\n\n  return <div className='bar' style={{ transform: `translateY(${playerBarY}px)` }} />;\n};\n\nexport default PlayerBar;","export const variables = {\n  barSize: {\n    width: 15,\n    height: 130\n  },\n  ballSize: {\n    width: 15,\n    height: 15\n  }\n};\n\nexport function getRandomInt(max: number) {\n  return Math.floor(Math.random() * max);\n}\n\nexport function lerp (value1: number, value2: number, amount: number) {\n\tamount = amount < 0 ? 0 : amount;\n\tamount = amount > 1 ? 1 : amount;\n\treturn value1 + (value2 - value1) * amount;\n};","import { BehaviorSubject } from \"rxjs\";\nimport { Vector2 } from \"../interfaces/core\";\nimport { getRandomInt, variables } from \"../utils\";\nimport enemyBarService from \"./enemyBar\";\nimport gameStateService, { gameStates } from \"./gameState\";\nimport playerBarService from \"./playerBar\";\nimport scoreService from \"./score\";\n\nclass BallService {\n  private ballIncreaseRatio = 0.1;\n\n  private ballPosition: Vector2 = { x: 0, y: 0 };\n  private ballDirection: Vector2 = { x: 1, y: 1 };\n\n  private ballPosition$ = new BehaviorSubject<Vector2>({ x: 0, y: 0 });\n\n  constructor() {\n    this.resetBall();\n  \n    setInterval(() => {\n      if(gameStateService.getStaticGameState() !== gameStates.playing) {\n        return;\n      }\n\n      const halfPlayfield: Vector2 = {\n        x: (document.body.offsetWidth - variables.barSize.width) / 2,\n        y: (document.body.offsetHeight - variables.barSize.height) / 2\n      };\n      const playerBarY = playerBarService.getStaticPlayerBarY();\n      const enemyBarY = enemyBarService.getStaticEnemyBarY();\n\n      this.ballPosition.x += this.ballDirection.x;\n      this.ballPosition.y += this.ballDirection.y;\n\n      if(Math.abs(this.ballPosition.x) > halfPlayfield.x) {\n        if(this.ballPosition.x < halfPlayfield.x) {\n          scoreService.increasePlayerScore();\n        } else {\n          scoreService.increaseEnemyScore();\n        }\n        this.resetBall();\n      } else {\n        if(this.ballPosition.x > (halfPlayfield.x - (variables.barSize.width * 2)) && this.isInsideBarVerticalRange(this.ballPosition, playerBarY) && this.ballDirection.x > 0) {\n          this.ballDirection.x = -this.ballDirection.x;\n        }\n        \n        if(this.ballPosition.x < (-halfPlayfield.x + (variables.barSize.width * 2)) && this.isInsideBarVerticalRange(this.ballPosition, enemyBarY) && this.ballDirection.x < 0) {\n          this.ballDirection.x = -this.ballDirection.x;\n        }\n      }\n\n      if(Math.abs(this.ballPosition.y) > halfPlayfield.y) {\n        this.ballDirection.y = -this.ballDirection.y;\n      }\n\n      this.ballPosition$.next({...this.ballPosition});\n    }, 1);\n\n    setInterval(() => {\n      if(gameStateService.getStaticGameState() !== gameStates.playing) {\n        return;\n      }\n\n      this.increaseBallSpeed();\n    }, 1000);\n  }\n\n  public getBallPosition() {\n    return this.ballPosition$.asObservable();\n  }\n\n  private resetBall() {\n    this.ballPosition = { x: 0, y: 0 };\n    this.ballDirection = { \n      x: getRandomInt(2) === 0 ? 1 : -1,\n      y: getRandomInt(2) === 0 ? 1 : -1\n    };\n  }\n\n  private isInsideBarVerticalRange(ballPosition: Vector2, barY: number) {\n    return ballPosition.y > barY - (variables.barSize.height / 2) && ballPosition.y < barY + (variables.barSize.height / 2);\n  }\n\n  private increaseBallSpeed() {\n    if(this.ballDirection.x < 0) {\n      this.ballDirection.x -= this.ballIncreaseRatio;\n    } else {\n      this.ballDirection.x += this.ballIncreaseRatio;\n    }\n\n    if(this.ballDirection.y < 0) {\n      this.ballDirection.y -= this.ballIncreaseRatio;\n    } else {\n      this.ballDirection.y += this.ballIncreaseRatio;\n    }\n  }\n}\n\nconst ballService = new BallService();\n\nexport default ballService;","import { BehaviorSubject, filter, fromEvent, map, switchMap, tap } from \"rxjs\";\nimport { Vector2 } from \"../interfaces/core\";\nimport { lerp, variables } from \"../utils\";\nimport ballService from \"./ball\";\nimport gameStateService, { gameStates } from \"./gameState\";\n\nclass EnemyBarService {\n  private enemyDifficulty = 0.06;\n  private enemyBarY$ = new BehaviorSubject<number>(0);\n\n  constructor() {\n    ballService.getBallPosition().pipe(\n      switchMap(ballPosition => gameStateService.getGameState().pipe(\n        filter(gameState => gameState === gameStates.playing),\n        map(() => ballPosition)\n      )),\n      map(ballPosition => {\n        const halfPlayfieldY = document.body.offsetHeight / 2;\n        const halfPlayfieldYNormalized = halfPlayfieldY - variables.barSize.height;\n\n        if(ballPosition.y < halfPlayfieldYNormalized) {\n          if(ballPosition.y > -halfPlayfieldYNormalized) {\n            return ballPosition.y;\n          }\n          return -halfPlayfieldYNormalized;\n        }\n        return halfPlayfieldYNormalized\n      })\n    ).subscribe(\n      ballY => this.enemyBarY$.next(lerp(this.enemyBarY$.value, ballY, this.enemyDifficulty))\n    );\n  }\n\n  public getEnemyBarY() {\n    return this.enemyBarY$.asObservable();\n  }\n\n  public getStaticEnemyBarY() {\n    return this.enemyBarY$.value;\n  }\n}\n\nconst enemyBarService = new EnemyBarService();\n\nexport default enemyBarService;","import { debounceTime, delay, map } from 'rxjs';\nimport { useObservable } from '../../../hooks';\nimport ballService from '../../../services/ball';\nimport enemyBarService from '../../../services/enemyBar';\nimport './styles.css';\n\nconst EnemyBar = () => {\n  const [barY] = useObservable(() => enemyBarService.getEnemyBarY(), []);\n\n  return <div className='bar' style={{ transform: `translateY(${barY}px)` }} />;\n};\n\nexport default EnemyBar;","import { useObservable } from '../../../hooks';\nimport ballService from '../../../services/ball';\nimport './styles.css';\n\nconst Ball = () => {\n  const [ballPosition] = useObservable(() => ballService.getBallPosition(), []);\n\n  return <div className='ball' style={{ transform: `translate(${ballPosition?.x}px, ${ballPosition?.y}px)` }} />;\n};\n\nexport default Ball;","import './styles.css';\n\nimport { useObservable } from \"../../../hooks\";\nimport scoreService from \"../../../services/score\";\n\nconst Score = () => {\n  const [score] = useObservable(() => scoreService.getScore(), []);\n\n  return (\n    <div className='score-container'>\n      <div className='score'>\n        <label className='score-label'>{score?.enemy}</label>\n      </div>\n      <div className='score'>\n        <label className='score-label'>{score?.player}</label>\n      </div>\n    </div>\n  );\n};\n\nexport default Score;","import { useObservable } from '../../../hooks';\nimport gameStateService, { gameStates } from '../../../services/gameState';\nimport './styles.css';\n\nconst GameInfo = () => {\n  const [gameState] = useObservable(() => gameStateService.getGameState(), []);\n\n  return (\n    <div className='game-info'>\n      {gameState === gameStates.none && <label className='game-state-label'>START</label>}\n      {gameState === gameStates.win && <label className='game-state-label'>WIN</label>}\n      {gameState === gameStates.lose && <label className='game-state-label'>LOSE</label>}\n    </div>\n  );\n};\n\nexport default GameInfo;","import './styles.css';\n\nimport PlayerBar from './PlayerBar';\nimport EnemyBar from './EnemyBar';\nimport Ball from './Ball';\nimport Score from './Score';\nimport GameInfo from './GameInfo';\n\nconst Playfield = () => {\n  return (\n    <div className='playfield'>\n      <div className='top' />\n      <div className='middle'>\n        <EnemyBar />\n        <div className='dotted-line' />\n        <Ball />\n        <PlayerBar />\n      </div>\n      <div className='bottom' />\n      <Score />\n      <GameInfo />\n    </div>\n  );\n};\n\nexport default Playfield;","import { useEffect } from 'react';\nimport './App.css';\nimport Playfield from './components/PlayField';\nimport gameStateService from './services/gameState';\n\nfunction App() {\n  useEffect(() => {\n    document.addEventListener('click', () => {\n      gameStateService.play();\n    });\n  }, []);\n\n  return (\n    <div className='container'>\n      <div className='header'>\n        <label className='game-name'>POG PONG</label>\n      </div>\n      <Playfield />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}